<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<!-- Message source for this context, loaded from localized "messages_xx" files -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="messages" />
	
	<!-- ID Generators -->
	<bean id="ticketGrantingTicketUniqueIdGenerator" class="org.jasig.cas.util.DefaultUniqueTicketIdGenerator">
		<constructor-arg
			index="0"
			value="50" />
	</bean>
	
	<bean
		id="servicesManager"
		class="org.jasig.cas.services.DefaultServicesManagerImpl">
		<constructor-arg index="0" ref="serviceRegistryDao" />
	</bean>
	
	<bean
		id="attributeRegistry"
		class="org.jasig.cas.services.X500AttributeRepository" />
	
	<bean
		id="serviceRegistryDao"
		class="org.jasig.cas.services.JpaServiceRegistryDaoImpl"
		p:entityManagerFactory-ref="entityManagerFactory" />
		

 	<!-- This is the EntityManagerFactory configuration for TopLink Essentials (Glassfish JPA) -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="loadTimeWeaver">
			<!--<bean class="org.springframework.instrument.classloading.SimpleLoadTimeWeaver"/>-->
			<bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>

		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.TopLinkJpaVendorAdapter">
				<property name="databasePlatform" value="oracle.toplink.essentials.platform.database.HSQLPlatform"/>
				<!--<property name="databasePlatform" value="oracle.toplink.essentials.platform.database.oracle.OraclePlatform"/>-->
				<property name="generateDdl" value="true"/>
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
    
	<tx:annotation-driven transaction-manager="transactionManager"/>

    <bean
    	id="database"
    	class="org.jasig.cas.util.HsqlDbDatabaseLocatorFactoryBean"
    	p:configLocation="classpath:db/cas.script" />

<!--    	
	<bean
		id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:driverClass="oracle.jdbc.driver.OracleDriver"
		p:jdbcUrl="jdbc:oracle:thin:@hasbro.acs.rutgers.edu:1521:acs3"
		p:password=""
		p:user="battags" />
-->    	

	<bean
		id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		p:driverClass="org.hsqldb.jdbcDriver"
		p:jdbcUrl-ref="database"
		p:password=""
		p:user="sa" />

	<bean id="httpClient" class="org.jasig.cas.util.HttpClient"
		p:readTimeout="5000"
		p:connectionTimeout="5000" />
	
	<bean id="serviceTicketUniqueIdGenerator" class="org.jasig.cas.util.DefaultUniqueTicketIdGenerator">
		<constructor-arg
			index="0"
			value="20" />
	</bean>
	 
	<bean id="samlServiceTicketUniqueIdGenerator" class="org.jasig.cas.util.SamlCompliantUniqueTicketIdGenerator">
		<constructor-arg index="0" value="https://localhost:8443" />
	</bean>
	
	<!-- Expiration policies -->
	<bean id="serviceTicketExpirationPolicy" class="org.jasig.cas.ticket.support.MultiTimeUseOrTimeoutExpirationPolicy">
		<!-- This argument is the number of times that a ticket can be used before its considered expired. -->
		<constructor-arg
			index="0"
			value="1" />
		
		<!-- This argument is the time a ticket can exist before its considered expired.  -->
		<constructor-arg
			index="1"
			value="300000" />
	</bean>
	
	<bean id="grantingTicketExpirationPolicy" class="org.jasig.cas.ticket.support.TimeoutExpirationPolicy">
		<!-- This argument is the time a ticket can exist before its considered expired.  -->
		<constructor-arg
			index="0"
			value="7200000" />
	</bean>

	<!-- CentralAuthenticationService -->
	<bean id="centralAuthenticationService" class="org.jasig.cas.CentralAuthenticationServiceImpl"
		p:ticketGrantingTicketExpirationPolicy-ref="grantingTicketExpirationPolicy"
		p:serviceTicketExpirationPolicy-ref="serviceTicketExpirationPolicy"
		p:authenticationManager-ref="authenticationManager"
		p:ticketGrantingTicketUniqueTicketIdGenerator-ref="ticketGrantingTicketUniqueIdGenerator"
		p:ticketRegistry-ref="ticketRegistry"
        p:servicesManager-ref="servicesManager">
		<property
			name="uniqueTicketIdGeneratorsForService">
				<map>
					<entry
						key="org.jasig.cas.authentication.principal.SimpleWebApplicationServiceImpl"
						value-ref="serviceTicketUniqueIdGenerator" />
					<entry
						key="org.jasig.cas.authentication.principal.SamlService"
						value-ref="samlServiceTicketUniqueIdGenerator" />
				</map>
			</property>
	</bean>
	
	<bean id="proxy10Handler" class="org.jasig.cas.ticket.proxy.support.Cas10ProxyHandler" />
		
	<bean id="proxy20Handler" class="org.jasig.cas.ticket.proxy.support.Cas20ProxyHandler"
		p:httpClient-ref="httpClient" />
	
	<!-- Ticket Registry -->
	<bean id="ticketRegistry" class="org.jasig.cas.ticket.registry.DefaultTicketRegistry" />
	
	<!--Quartz -->
	<!-- TICKET REGISTRY CLEANER -->
	<bean id="ticketRegistryCleaner" class="org.jasig.cas.ticket.registry.support.DefaultTicketRegistryCleaner"
		p:ticketRegistry-ref="ticketRegistry" />
	
	<bean id="jobDetailTicketRegistryCleaner" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
		p:targetObject-ref="ticketRegistryCleaner"
		p:targetMethod="clean" />
	
	<bean id="triggerJobDetailTicketRegistryCleaner" class="org.springframework.scheduling.quartz.SimpleTriggerBean"
		p:jobDetail-ref="jobDetailTicketRegistryCleaner"
		p:startDelay="20000"
		p:repeatInterval="5000000" />

	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref
					local="triggerJobDetailTicketRegistryCleaner" />
			</list>
		</property>
	</bean>
	
	<!-- ADVISORS -->	
	<bean id="advisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
</beans>