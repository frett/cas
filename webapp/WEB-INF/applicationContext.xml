<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC  "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
	<!-- Message source for this context, loaded from localized "messages_xx" files -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename"><value>messages</value></property>										
	</bean>
	
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location"><value>WEB-INF/cas.properties</value></property>
	</bean>
	
	<!-- ID Generators -->
	<bean id="uniqueIdGenerator" class="org.jasig.cas.util.DefaultUniqueTicketIdGenerator">
		<constructor-arg index="0"><value>31</value></constructor-arg>
	</bean>
	
	<!-- Expiration policies -->
	<bean id="serviceTicketExpirationPolicy" class="org.jasig.cas.ticket.support.MultiTimeUseOrTimeoutExpirationPolicy">
		<constructor-arg index="0"><value>${policy.expiration.service.numberOfUses}</value></constructor-arg>
		<constructor-arg index="1"><value>${policy.expiration.service.timeOut}</value></constructor-arg>
	</bean>
	
	<bean id="grantingTicketExpirationPolicy" class="org.jasig.cas.ticket.support.TimeoutExpirationPolicy">
		<constructor-arg index="0"><value>${policy.expiration.granting.timeOut}</value></constructor-arg>
	</bean>

	<!-- CentralAuthenticationService -->
	<bean id="centralAuthenticationService" class="org.jasig.cas.CentralAuthenticationServiceImpl">
		<property name="ticketRegistry"><ref local="ticketRegistry" /></property>
		<property name="authenticationManager"><ref bean="authenticationManager" /></property>
		<property name="uniqueTicketIdGenerator"><ref local="uniqueIdGenerator" /></property>
		<property name="ticketGrantingTicketExpirationPolicy"><ref local="grantingTicketExpirationPolicy" /></property>
		<property name="serviceTicketExpirationPolicy"><ref local="serviceTicketExpirationPolicy" /></property>
	</bean>
	
	<!-- ProxyHandlers -->
	<bean id="proxy20Handler" class="org.jasig.cas.ticket.proxy.support.Cas20ProxyHandler" autowire="byType" />
	
	<bean id="proxy10Handler" class="org.jasig.cas.ticket.proxy.support.Cas20ProxyHandler" autowire="byType" />
	
	<!-- Ticket Registry -->
	<bean id="ticketRegistry" class="org.jasig.cas.ticket.registry.DefaultTicketRegistry" />
	
	<!-- Tokens -->
	<bean id="loginTokens" class="java.util.HashMap" />
	
	<!--Quartz -->
	<!--  LOGIN TOKEN REGISTRY CLEANER -->
	<bean id="loginTokenRegistryCleaner" class="org.jasig.cas.ticket.registry.support.LoginTokenRegistryCleaner">
		<property name="loginTokens"><ref local="loginTokens" /></property>
		<property name="timeOut"><value>${web.token.login.timeout}</value></property>
	</bean>
	
	<bean id="jobDetailLoginTokenRegistryCleaner" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref local="loginTokenRegistryCleaner" />
		</property>
		<property name="targetMethod"><value>clean</value></property>
	</bean>
	
	<bean id="triggerJobDetailLoginTokenRegistryCleaner" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail">
			<ref local="jobDetailLoginTokenRegistryCleaner" />
		</property>
		<property name="startDelay"><value>${web.token.login.cleanup.start}</value></property>
		<property name="repeatInterval"><value>${web.token.login.cleanup.repeat}</value></property>
	</bean>
	
	<!-- TICKET REGISTRY CLEANER -->
	<bean id="ticketRegistryCleaner" class="org.jasig.cas.ticket.registry.support.DefaultTicketRegistryCleaner">
		<property name="ticketRegistry"><ref local="ticketRegistry" /></property>
	</bean>
	
	<bean id="jobDetailTicketRegistryCleaner" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref local="ticketRegistryCleaner" />
		</property>
		<property name="targetMethod"><value>clean</value></property>
	</bean>
	
	<bean id="triggerJobDetailTicketRegistryCleaner" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail">
			<ref local="jobDetailTicketRegistryCleaner" />
		</property>
		<property name="startDelay"><value>${web.token.ticket.cleanup.start}</value></property>
		<property name="repeatInterval"><value>${web.token.ticket.cleanup.repeat}</value></property>
	</bean>
	
	<!--  SERVICE REGISTRY -->
	<bean id="serviceRegistryJob" class="org.jasig.cas.services.cron.DefaultReloadServiceContextCronJob">
		<property name="serviceRegistryManager"><ref bean="serviceRegistry" /></property>
	</bean>
	
	<bean id="jobDetailServiceRegistry" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref local="serviceRegistryJob" />
		</property>
		<property name="targetMethod"><value>reloadServiceRegistry</value></property>
	</bean>
	
	<bean id="triggerJobDetailServiceRegistry" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail">
			<ref local="jobDetailServiceRegistry" />
		</property>
		<property name="startDelay"><value>20000</value></property>
		<property name="repeatInterval"><value>100000</value></property>
	</bean>
	
	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="triggerJobDetailLoginTokenRegistryCleaner" />
				<ref local="triggerJobDetailTicketRegistryCleaner" />
				<ref local="triggerJobDetailServiceRegistry" />
			</list>
		</property>
	</bean>
</beans>