<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC  "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
	<!-- Message source for this context, loaded from localized "messages_xx" files -->
	<bean
		id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property
			name="basename"
			value="messages" />
	</bean>
	
	<!-- ID Generators -->
	<bean
		id="ticketGrantingTicketUniqueIdGenerator"
		class="org.jasig.cas.util.DefaultUniqueTicketIdGenerator">
		<constructor-arg
			index="0"
			value="50" />
	</bean>
	
	<bean
		id="httpClient"
		class="org.jasig.cas.util.HttpClient3FactoryBean">
		<property
			name="soTimeout"
			value="5000" />
		<property
			name="connectionManagerTimeout"
			value="5000" />
		<property
			name="connectionTimeout"
			value="5000" />
		<property
			name="defaultMaxConnectionsPerHost"
			value="50" />
		<property
			name="maxTotalConnections"
			value="50" />
	</bean>
	
	
	<bean
		id="serviceTicketUniqueIdGenerator"
		class="org.jasig.cas.util.DefaultUniqueTicketIdGenerator">
		<constructor-arg
			index="0"
			value="20" />
	</bean>
	
	<!-- Expiration policies -->
	<bean
		id="serviceTicketExpirationPolicy"
		class="org.jasig.cas.ticket.support.MultiTimeUseOrTimeoutExpirationPolicy">
		<!-- This argument is the number of times that a ticket can be used before its considered expired. -->
		<constructor-arg
			index="0"
			value="1" />
		
		<!-- This argument is the time a ticket can exist before its considered expired.  -->
		<constructor-arg
			index="1"
			value="300000" />
	</bean>
	
	<bean
		id="grantingTicketExpirationPolicy"
		class="org.jasig.cas.ticket.support.TimeoutExpirationPolicy">
		<!-- This argument is the time a ticket can exist before its considered expired.  -->
		<constructor-arg
			index="0"
			value="7200000" />
	</bean>

	<!-- CentralAuthenticationService -->
	<bean
		id="centralAuthenticationService"
		class="org.jasig.cas.CentralAuthenticationServiceImpl">
		<property
			name="ticketGrantingTicketExpirationPolicy"
			ref="grantingTicketExpirationPolicy" />
		<property
			name="serviceTicketExpirationPolicy"
			ref="serviceTicketExpirationPolicy" />
		<property
			name="authenticationManager"
			ref="authenticationManager" />
		<property
			name="ticketGrantingTicketUniqueTicketIdGenerator"
			ref="ticketGrantingTicketUniqueIdGenerator" />
		<property
			name="serviceTicketUniqueTicketIdGenerator"
			ref="serviceTicketUniqueIdGenerator" />
		<property
			name="ticketRegistry"
			ref="ticketRegistry" />
	</bean>
	
	<bean
		id="proxy10Handler"
		class="org.jasig.cas.ticket.proxy.support.Cas10ProxyHandler" />
		
	<bean
		id="proxy20Handler"
		class="org.jasig.cas.ticket.proxy.support.Cas20ProxyHandler">
		<property
			name="httpClient"
			ref="httpClient" />
	</bean>
	
	<!-- Ticket Registry -->
	<bean
		id="ticketRegistry"
		class="org.jasig.cas.ticket.registry.DefaultTicketRegistry" />
	
	<!--Quartz -->
	<!-- TICKET REGISTRY CLEANER -->
	<bean
		id="ticketRegistryCleaner"
		class="org.jasig.cas.ticket.registry.support.DefaultTicketRegistryCleaner">
		<property
			name="ticketRegistry"
			ref="ticketRegistry" />
	</bean>
	
	<bean id="jobDetailTicketRegistryCleaner" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property
			name="targetObject"
			ref="ticketRegistryCleaner" />
		<property
			name="targetMethod"
			value="clean" />
	</bean>
	
	<bean
		id="triggerJobDetailTicketRegistryCleaner"
		class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property
			name="jobDetail"
			ref="jobDetailTicketRegistryCleaner" />
		<!--  How long after the application is started before we start attempting to clean out the registry. -->
		<property
			name="startDelay"
			value="20000" />
			
		<!-- How often the cleaner should be run to clean out the ticket registry. -->
		<property
			name="repeatInterval"
			value="5000000" />
	</bean>

	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref
					local="triggerJobDetailTicketRegistryCleaner" />
			</list>
		</property>
	</bean>
	
	<!-- ADVISORS -->	
	<bean
		id="advisorAutoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
</beans>